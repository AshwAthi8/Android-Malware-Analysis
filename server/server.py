import os
import uuid
import virustotal_worker
import json
from flask import Flask, request, render_template, abort, send_file, redirect, url_for
from werkzeug.utils import secure_filename
from results import get_results
import time

app = Flask(__name__)
app.secret_key = b'_5#y2L"F4Q8z\n\xec]/'

# TODO: remove py after testing
ALLOWED_EXTENSIONS = {'apk', 'py'}

def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

"""
Here we render the upload page
"""
@app.route('/upload', methods = ['GET'])
def upload_file():
   return render_template('upload.html')
	
"""
Internal Function which gets the files
"""
@app.route('/uploader', methods = ['GET', 'POST'])
def get_file():
    if request.method == 'POST':
        file = request.files['file']
        filename = secure_filename(file.filename)
        if len(filename)==0 :
            error = "Please upload an apk file"
            return render_template('upload.html',error=error)
        elif(not filename.endswith(".apk")):
            error = "The file is not an apk"
            return render_template('upload.html',error=error)
        file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
        return redirect(url_for('results', filename=filename))

"""
This function processes the data and prints out the results
"""
@app.route('/results/<filename>', methods = ['GET'])
def results(filename):
    virus_result_scan = virustotal_worker.virus_total_upload(filename)
    time.sleep(2)
    virus_result = virustotal_worker.virus_total_get_result(virus_result_scan)
    results = get_results(filename)
    if results.error == True:
        return render_template('result.html')
    else:
        return render_template('result.html',value=str(results.prediciton[0]), data=virus_result)
    
    

@app.route('/')
def index():
    return render_template("dashboard.html")



if __name__ == '__main__':
    app.config['UPLOAD_FOLDER'] = "/home/cloud28@cyberdome.org.in/server/server-files"
    app.config['MAX_CONTENT_PATH'] = 16 * 1024 * 1024
    app.run(host='0.0.0.0', debug=True, port=80)
